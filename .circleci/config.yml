# CircleCI

version: 2.1

# -------------------------
#         DEFAULTS
# -------------------------

workspace_root: &workspace_root ~/repo

defaults: &defaults
  working_directory: *workspace_root
  docker:
    - image: cimg/node:15.8.0

cache_key: &cache_key v1-dependencies-{{ checksum "yarn.lock" }}

attach_workspace: &attach_workspace
  attach_workspace:
    at: *workspace_root

# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  build_and_test:
    jobs:
      - test
      - build:
          requires:
            - test

jobs:
  test:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run:
          name: Lint Code
          command: yarn lint:eslint .

      - run:
          name: Check Formatting
          command: yarn lint:prettier:check .

      - run:
          name: Run Tests
          command: yarn test

  build:
    <<: *defaults

    docker:
      - image: cimg/node:15.8.0-browsers

    steps:
      - *attach_workspace

      # - run:
      #     name: Install Headless Chrome dependencies
      #     command: |
      #       sudo apt-get install -yq \
      #       gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
      #       libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
      #       libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
      #       libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
      #       fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

      - run:
          name: Build Storybook
          command: yarn storybook:build

      - run:
          name: Build Storybook Composition Cache
          command: yarn sb extract

      - run:
          name: Push to Chromatic
          command: yarn chromatic --project-token ${CHROMATIC_PROJECT_TOKEN} --exit-once-uploaded --storybook-build-dir ./storybook-static
